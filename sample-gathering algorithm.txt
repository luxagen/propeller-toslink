gathered long 0
mask_sample long $0FFFFFF0
mask_parity long $10000000
im_mpx11 long $00000006
im_mux long $0000000E
im_sdata long $00000001
outidx long 0

outbuf res 1
outptr res 1


analog_board_loop

waitpeq im_mpx11,im_mux		' Wait for (!INH && MPXA && MPXB)

' Wait for S/PDIF encoder to be finished with the first sample
:encoder_wait
	rdlong samples_read,posptr
	cmp samples_read,#0 wz
if_e jmp encoder_wait

' Start loop at beginning of buffer with hub access synchronised to second half of each 16-cycle group
mov outptr,outbuf
nop

---
{ SUBCODE
mov temp2,outbyte
shr temp2,#(2+5)
add temp2,buf_control
movs $+2,temp2
nop
mov temp2,0-0

mov temp3,outbyte
shr temp3,#2
shr temp2,temp3
and temp2,#1
ror temp2,#2
}
---

:loop
	test ina,im_sdata wc
	rcl temp,#1
	and gathered,mask_sample wc
	if_c or gathered,mask_parity

	test ina,im_sdata wc
	rcl temp,#1
	wrlong gathered,outptr

	test ina,im_sdata wc
	rcl temp,#1
	add outbyte,#4
	cmpsub outidx,bufbytes

	test ina,im_sdata wc
	rcl temp,#1
	and temp,#$00F
	nop

	test ina,im_sdata wc
	rcl temp,#1
	nop
	nop

	test ina,im_sdata wc
	rcl temp,#1
	nop
	nop

	test ina,im_sdata wc
	rcl temp,#1
	nop
	nop

	test ina,im_sdata wc
	rcl temp,#1
	nop
	nop

	test ina,im_sdata wc
	rcl temp,#1
	nop
	nop

	test ina,im_sdata wc
	rcl temp,#1
	nop
	nop

	test ina,im_sdata wc
	rcl temp,#1
	nop
	nop

	test ina,im_sdata wc
	rcl temp,#1
	nop
	nop

	test ina,im_sdata wc
	rcl temp,#1
	nop
	nop

	test ina,im_sdata wc
	rcl temp,#1
	nop
	nop

	test ina,im_sdata wc
	rcl temp,#1
	mov outptr,outbuf
	add outptr,outbyte

	test ina,im_sdata wc
	rcl temp,#13
	mov gathered,temp
jmp :loop